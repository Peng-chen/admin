<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"><mapper namespace="userEmail">    <resultMap type="com.admin.bean.Email" id="userEmail">        <result property="id" column="id"/>        <result property="userId" column="user_id"/>        <result property="title" column="title"/>        <result property="content" column="content"/>        <result property="attachment" column="attachment" javaType="Object"                jdbcType="VARCHAR"/>        <result property="createTime" column="create_time"/>        <result property="read" column="has_read"/>        <result property="senderId" column="sender_id"/>        <result property="type" column="type"/>        <result property="csbName" column="csb_name"/>    </resultMap>    <insert id="insertUserEmail" parameterType="com.admin.bean.Email"            useGeneratedKeys="true" keyProperty="email_id">		INSERT INTO user_email_info		(user_id,title,content,attachment,sender_id,type)		VALUES(#{userId},#{title},#{content},#{attachment, javaType=Object,		jdbcType=VARCHAR},#{senderId},#{type});	</insert>    <insert id="insertUserEmailWithUserIdSql" parameterType="java.util.Map"            useGeneratedKeys="true" keyProperty="email_id">        INSERT INTO user_email_info( title, content, attachment, user_id , sender_id)(        select #{title},#{content},#{attachment, javaType=Object,jdbcType=VARCHAR},B1.user_id,#{senderId} from (${userIdSql} ) AS B1)	</insert>    <select id="selectUserEmail" parameterType="java.util.Map" resultMap="userEmail">		SELECT		id,user_id,title,content,attachment,create_time,has_read,sender_id,type,csb_name		FROM		user_email_info		WHERE id=#{emailId} AND user_id=#{userId};	</select>    <delete id="deleteUserEmail" parameterType="java.util.Map">		DELETE		FROM		user_email_info		WHERE id=#{emailId} AND user_id=#{userId};	</delete>    <select id="selectUserEmailsByUserId" parameterType="java.lang.Integer" resultMap="userEmail">		SELECT		id,user_id,title,content,attachment,create_time,has_read,sender_id,type,csb_name		FROM		user_email_info		WHERE user_id=#{userId};	</select>    <select id="selectUserNotReadEmailsByUserId" parameterType="java.lang.Integer" resultMap="userEmail">		SELECT		id,user_id,title,content,attachment,create_time,has_read,sender_id,type,csb_name		FROM		user_email_info		WHERE has_read = false AND user_id=#{userId};	</select>    <update id="readUserEmail" parameterType="java.util.HashMap">		UPDATE user_email_info SET has_read=true		WHERE id=#{emailId} AND has_read=false AND user_id=#{userId};	</update>    <update id="readUserEmails" parameterType="java.util.Map">        UPDATE user_email_info        SET has_read = true        WHERE has_read=false AND user_id=#{userId} AND id in        <foreach collection="ids" item="item" index="index" open="("                 close=")" separator=",">            #{item}        </foreach>        ;    </update>    <delete id="clearUserDonateEmails">		DELETE FROM user_email_info WHERE type = 1;	</delete>    <delete id="clearSystemEmailExpireRelationTable">		DELETE FROM user_system_email_relation WHERE ((NOW()::timestamp)::date-(receive_time::timestamp)::date)>60;	</delete>    <delete id="clearSystemEmailExpireInfoTable">		DELETE FROM user_email_info WHERE ((NOW()::timestamp)::date-(create_time::timestamp)::date)>60 AND type=0;	</delete>    <insert id="postSystemEmailToAllUsers" parameterType="java.util.HashMap">		INSERT INTO user_system_email_relation(user_id,system_email_id)		SELECT t1.id AS user_id, t2.id AS system_email_id FROM user_info t1, system_email_info t2 WHERE t2.id = #{systemEmailId} ;	</insert>    <delete id="clearSystemEmailAll" parameterType="java.util.HashMap">		DELETE FROM user_system_email_relation WHERE system_email_id = #{systemEmailId};	</delete>    <select id="selectUserIdNotInEmail" resultType="java.lang.Integer" parameterType="java.util.HashMap">		select id from user_info where id not in ( select user_id from user_system_email_relation where system_email_id = #{systemEmailId})	</select>    <insert id="postPackEmailifOk" parameterType="java.util.HashMap">        INSERT INTO user_system_email_relation(user_id, system_email_id, has_read)        VALUES        <foreach collection="userIds" item="item" index="index" separator=",">            (#{item}, #{systemEmailId}, 'false')        </foreach>        ;    </insert></mapper>